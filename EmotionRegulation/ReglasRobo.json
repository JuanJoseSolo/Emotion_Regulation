[
"EmotionalAppraisalAsset", 
{
	"root":
		{
			"classId": 0,
			"Description": null,
			"AppraisalRules":
				{
					"AppraisalWeight": 1,
					"Rules": [
						{
							"EventName": "Event(Action-End, *, Speak(*, *, *, Threat), SELF)",
							"Conditions":
								{
									"Set": []
								},
							"AppraisalVariables":
								{
									"AppraisalVariables": [
										{
											"Name": "Goal Success Probablity",
											"Value": -0.1,
											"Target": "Survive"
										}]
								}
						}, 
						{
							"EventName": "Event(Action-End, *, Speak(*, *, *, ToBuy), SELF)",
							"Conditions":
								{
									"Set": []
								},
							"AppraisalVariables":
								{
									"AppraisalVariables": [
										{
											"Name": "Desirability",
											"Value": 4,
											"Target": "-"
										}]
								}
						}]
				}
		},
	"types": [
		{
			"TypeId": 0,
			"ClassName": "EmotionalAppraisal.EmotionalAppraisalAsset, EmotionalAppraisal, Version=1.4.1.0, Culture=neutral, PublicKeyToken=null"
		}]
},
"EmotionalDecisionMakingAsset", 
{
	"root":
		{
			"classId": 0,
			"ActionTendencies": [
				{
					"Action": "Equip",
					"Target": "[x]",
					"Layer": "-",
					"Conditions":
						{
							"Set": ["Has([x]) > 0", "Equipped([x]) = False", "Current(Location) = Store"]
						},
					"Priority": 4
				}, 
				{
					"Action": "GoTo",
					"Target": "[place]",
					"Layer": "-",
					"Conditions":
						{
							"Set": ["Location([place]) = False", "Current(Location) = Home", "Works(Store) = False"]
						},
					"Priority": 3
				}, 
				{
					"Action": "Speak([cs], [ns], -, -)",
					"Target": "[t]",
					"Layer": "-",
					"Conditions":
						{
							"Set": ["IsAgent([t]) = True", "[t] != SELF", "ValidDialogue([cs], [ns], -, -) = True"]
						},
					"Priority": 1
				}, 
				{
					"Action": "Speak([cs], [ns], John, Threat)",
					"Target": "[t]",
					"Layer": "-",
					"Conditions":
						{
							"Set": ["IsAgent([t]) = True", "[t] != SELF", "Equipped(Gun) = True", "Current(Location) = Store", "Works(Store) = False", "ValidDialogue([cs], [ns], John, Threat) = True"]
						},
					"Priority": 5
				}, 
				{
					"Action": "Speak([cs], [ns], StoreOwner, Fearful)",
					"Target": "[t]",
					"Layer": "-",
					"Conditions":
						{
							"Set": ["IsAgent([t]) = True", "[t] != SELF", "Works(Store) = True", "Current(Location) = Store", "StrongestEmotion(SELF) = Fear", "ValidDialogue([cs], [ns], StoreOwner, Fearful) = True"]
						},
					"Priority": 3
				}, 
				{
					"Action": "Speak([cs], [ns], StoreOwner, ToRest)",
					"Target": "People",
					"Layer": "-",
					"Conditions":
						{
							"Set": ["IsAgent([t]) = True", "[t] != SELF", "Works(Store) = True", "Current(Location) = Store", "ValidDialogue([cs], [ns], StoreOwner, ToRest) = True"]
						},
					"Priority": 2
				}, 
				{
					"Action": "Speak([cs], [ns], StoreOwner, FearConfirm)",
					"Target": "[t]",
					"Layer": "-",
					"Conditions":
						{
							"Set": ["IsAgent([t]) = True", "[t] != SELF", "Works(Store) = True", "Current(Location) = Store", "StrongestEmotion(SELF) = Fears-Confirmed", "ValidDialogue([cs], [ns], StoreOwner, FearConfirm) = True"]
						},
					"Priority": 6
				}, 
				{
					"Action": "Speak([cs], [ns], John, ToBuy)",
					"Target": "[t]",
					"Layer": "-",
					"Conditions":
						{
							"Set": ["IsAgent([t]) = True", "[t] != SELF", "Equipped(Gun) = True", "Current(Location) = Store", "Works(Store) = False", "ValidDialogue([cs], [ns], John, ToBuy) = True"]
						},
					"Priority": 5
				}, 
				{
					"Action": "Speak([cs], [ns], StoreOwner, Sell)",
					"Target": "[t]",
					"Layer": "-",
					"Conditions":
						{
							"Set": ["IsAgent([t]) = True", "[t] != SELF", "Works(Store) = True", "Current(Location) = Store", "ValidDialogue([cs], [ns], StoreOwner, Sell) = True", "StrongestEmotion(SELF) = Joy"]
						},
					"Priority": 5
				}]
		},
	"types": [
		{
			"TypeId": 0,
			"ClassName": "EmotionalDecisionMaking.EmotionalDecisionMakingAsset, EmotionalDecisionMaking, Version=1.2.0.0, Culture=neutral, PublicKeyToken=null"
		}]
},
"SocialImportanceAsset", 
{
	"root":
		{
			"classId": 0,
			"AttributionRules": []
		},
	"types": [
		{
			"TypeId": 0,
			"ClassName": "SocialImportance.SocialImportanceAsset, SocialImportance, Version=1.5.0.0, Culture=neutral, PublicKeyToken=null"
		}]
},
"CommeillFautAsset", 
{
	"root":
		{
			"classId": 0,
			"SocialExchanges": []
		},
	"types": [
		{
			"TypeId": 0,
			"ClassName": "CommeillFaut.CommeillFautAsset, CommeillFaut, Version=1.7.0.0, Culture=neutral, PublicKeyToken=null"
		}]
}
]
